import 'package:agribar/services/reportes_service.dart';

/// Test espec√≠fico para verificar manejo de fechas YYYYMMDD
void main() async {
  print('üóìÔ∏è === TEST FORMATO FECHAS YYYYMMDD ===');
  print('=====================================');

  final reportesService = ReportesService();

  try {
    // Test 1: Sin filtros de fecha
    print('\n1Ô∏è‚É£ REPORTE SIN FILTROS DE FECHA:');
    final reporteSinFiltro = await reportesService.obtenerReporteGeneral();
    print('‚úÖ Registros sin filtro: ${reporteSinFiltro.length}');
    if (reporteSinFiltro.isNotEmpty) {
      print('   Ejemplo: ${reporteSinFiltro.first['rancho']} - \$${reporteSinFiltro.first['gasto_total']}');
    }

    // Test 2: Con filtro de fecha de hace 7 d√≠as
    print('\n2Ô∏è‚É£ REPORTE CON FILTRO DE FECHA (√∫ltimos 7 d√≠as):');
    final DateTime fechaFin = DateTime.now();
    final DateTime fechaInicio = fechaFin.subtract(Duration(days: 7));
    
    print('   üìÖ Fecha inicio: ${fechaInicio.year}-${fechaInicio.month.toString().padLeft(2, '0')}-${fechaInicio.day.toString().padLeft(2, '0')}');
    print('   üìÖ Fecha fin: ${fechaFin.year}-${fechaFin.month.toString().padLeft(2, '0')}-${fechaFin.day.toString().padLeft(2, '0')}');
    print('   üìä Formato YYYYMMDD inicio: ${fechaInicio.year}${fechaInicio.month.toString().padLeft(2, '0')}${fechaInicio.day.toString().padLeft(2, '0')}');
    print('   üìä Formato YYYYMMDD fin: ${fechaFin.year}${fechaFin.month.toString().padLeft(2, '0')}${fechaFin.day.toString().padLeft(2, '0')}');

    final reporteConFecha = await reportesService.obtenerReporteGeneral(
      fechaInicio: fechaInicio,
      fechaFin: fechaFin,
    );
    
    print('‚úÖ Registros con filtro de fecha: ${reporteConFecha.length}');
    if (reporteConFecha.isNotEmpty) {
      print('   üìä RESULTADOS FILTRADOS:');
      for (var registro in reporteConFecha) {
        print('   - ${registro['rancho']} | ${registro['actividad']} | \$${registro['gasto_total']}');
      }
    } else {
      print('   ‚ö†Ô∏è No hay registros en el rango de fechas especificado');
    }

    // Test 3: Con filtro de fecha muy espec√≠fico (hoy)
    print('\n3Ô∏è‚É£ REPORTE FILTRADO PARA HOY:');
    final DateTime hoy = DateTime.now();
    final reporteHoy = await reportesService.obtenerReporteGeneral(
      fechaInicio: hoy,
      fechaFin: hoy,
    );
    
    print('‚úÖ Registros para hoy (${hoy.year}${hoy.month.toString().padLeft(2, '0')}${hoy.day.toString().padLeft(2, '0')}): ${reporteHoy.length}');

    // Test 4: Resumen general para verificar totales
    print('\n4Ô∏è‚É£ RESUMEN GENERAL PARA VERIFICACI√ìN:');
    final resumen = await reportesService.obtenerResumenGeneral();
    print('‚úÖ Resumen:');
    print('   üë∑ Total empleados: ${resumen['total_empleados']}');
    print('   üè° Ranchos activos: ${resumen['ranchos_activos']}');
    print('   üìÖ D√≠as trabajados: ${resumen['dias_trabajados']}');
    print('   üí∞ Monto total: \$${resumen['monto_total']}');

    print('\nüéâ === PRUEBAS DE FECHA COMPLETADAS ===');

  } catch (e, stackTrace) {
    print('‚ùå ERROR EN PRUEBAS: $e');
    print('üîç Stack trace: $stackTrace');
  }
}
