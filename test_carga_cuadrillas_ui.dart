// Test espec√≠fico para verificar la carga de cuadrillas en la UI
// Simula exactamente lo que hace _cargarCuadrillasHabilitadas()

import 'lib/services/database_service.dart';

void main() async {
  print("=== TEST CARGA CUADRILLAS UI ===");
  print("Simulando funci√≥n _cargarCuadrillasHabilitadas()...");
  print("");
  
  try {
    // Simular exactamente lo que hace la funci√≥n
    final cuadrillasBD = await obtenerCuadrillasHabilitadas();
    
    print("üìä RESULTADO DE obtenerCuadrillasHabilitadas():");
    print("   Cantidad de cuadrillas: ${cuadrillasBD.length}");
    print("");
    
    if (cuadrillasBD.isEmpty) {
      print("‚ùå PROBLEMA: No se obtuvieron cuadrillas");
      print("   La funci√≥n retorna una lista vac√≠a");
    } else {
      print("‚úÖ CUADRILLAS OBTENIDAS:");
      for (var i = 0; i < cuadrillasBD.length; i++) {
        var cuadrilla = cuadrillasBD[i];
        print("   ${i + 1}. ${cuadrilla}");
      }
    }
    
    print("");
    print("üîç VERIFICACI√ìN DE ESTRUCTURA:");
    if (cuadrillasBD.isNotEmpty) {
      var primera = cuadrillasBD[0];
      print("   Estructura de la primera cuadrilla:");
      primera.forEach((key, value) {
        print("     - $key: $value (${value.runtimeType})");
      });
      
      // Verificar si tiene las claves esperadas
      List<String> clavesEsperadas = ['id_cuadrilla', 'nombre'];
      print("");
      print("   Verificando claves esperadas:");
      for (String clave in clavesEsperadas) {
        bool tiene = primera.containsKey(clave);
        print("     - $clave: ${tiene ? '‚úÖ' : '‚ùå'}");
      }
    }
    
    print("");
    print("üìã SIMULACI√ìN DE setState:");
    print("   _optionsCuadrilla.clear()");
    print("   _optionsCuadrilla.addAll(cuadrillasBD)");
    print("   Resultado: _optionsCuadrilla tendr√° ${cuadrillasBD.length} elementos");
    
  } catch (e) {
    print("‚ùå ERROR EN LA FUNCI√ìN: $e");
    print("   Esto explicar√≠a por qu√© no aparecen las cuadrillas");
  }
  
  print("");
  print("=== FIN DEL TEST ===");
}
